version: "3"
services:
  ft-mongodb:
    image: mongo
    ports:
      - 27017:27017
    networks:
      - ft-network
    volumes:
      - ft-data-mongo:/data/db
    container_name: ft-mongo

  ft-redis:
    image: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - ft-network
    volumes:
      - ft-data-redis:/data
    container_name: ft-redis

  ft-front:
    build:
      dockerfile: Dockerfile
      context: ./admin/frontend
      args:
        - port=${FRONT_PORT}
        - MS_MONGO_PORT=${MS_MONGO_PORT}
        - HOST=${STS_SERVER}
        - STS_SERVER=${STS_SERVER}
        - FRONT_PORT=${FRONT_PORT}
    image: ft/front
    container_name: ft-front
    ports:
      - ${FRONT_PORT}:80
    environment: 
      - MS_MONGO_PORT=${MS_MONGO_PORT}
      - HOST=${STS_SERVER}
      - STS_SERVER=${STS_SERVER}
      - FRONT_PORT=${FRONT_PORT}
    networks:
      - ft-network
    links:
      - ft-sts
    depends_on:
      - ft-sts

  ft-ext-go:
    build:
      dockerfile: Dockerfile
      context: ./microserviceGo
      args:
        - port=${GO_PORT}
        - redis_port=${REDIS_PORT}
    image: ft/ext/go
    container_name: ft-ext-go
    ports:
      - ${GO_PORT}:${GO_PORT}
    networks:
      - ft-network
    depends_on:
      - "ft-redis"

  ft-microservice:
    build:
      dockerfile: Dockerfile
      context: ./microserviceNodeJs
      args:
        - port=${MS_MONGO_PORT}
        - redis_port=${REDIS_PORT}
        - STS_SERVER=${STS_SERVER}
        - STS_PORT=${STS_PORT}
    volumes:
      - ./microserviceNodeJs:/usr/src/app
    command: npm run mon
    image: ft/mongo/app
    container_name: ft-mongo-app    
    ports:
      - ${MS_MONGO_PORT}:${MS_MONGO_PORT}
    networks:
      - ft-network
    depends_on:
      - "ft-mongodb"
      - "ft-redis"

  ft-sts-admin:
    build:
      dockerfile: Skoruba.IdentityServer4.Admin/Dockerfile
      context: ./IdentityServer4.Admin/src
    image: ft/sts/admin
    container_name: ft-sts-admin
    ports:
      - ${STS_ADMIN_PORT}:${STS_ADMIN_PORT}
      - ${STS_ADMIN_HTTPS_PORT}:${STS_ADMIN_HTTPS_PORT}
    environment: 
      - ASPNETCORE_HTTPS_PORT=${STS_ADMIN_HTTPS_PORT}
      - ASPNETCORE_URLS=https://+:${STS_ADMIN_HTTPS_PORT};http://+:${STS_ADMIN_PORT}
      - Kestrel__Certificates__Default__Path=cert-aspnetcore.pfx
      - Kestrel__Certificates__Default__Password=ufo
      - AdminConfiguration:IdentityServerBaseUrl=${STS_SERVER}:${STS_PORT}
      - AdminConfiguration:IdentityAdminBaseUrl=${STS_ADMIN_SERVER}:${STS_ADMIN_PORT}
      - AdminConfiguration:IdentityAdminRedirectUri=${STS_ADMIN_SERVER}:${STS_ADMIN_PORT}/signin-oidc
    networks:
      - ft-network
    volumes:
      - ./IdentityServer4.Admin/src/db:/db
    links:
      - ft-sts
    depends_on:
      - ft-sts

  ft-sts:
    build:
      dockerfile: Skoruba.IdentityServer4.STS.Identity/Dockerfile
      context: ./IdentityServer4.Admin/src
    image: ft/sts
    container_name: ft-sts
    ports:
      - ${STS_PORT}:${STS_PORT}
      - ${STS_HTTPS_PORT}:${STS_HTTPS_PORT}
    environment: 
      - ASPNETCORE_HTTPS_PORT=${STS_HTTPS_PORT}
      - ASPNETCORE_URLS=https://+:${STS_HTTPS_PORT};http://+:${STS_PORT}
      - Kestrel__Certificates__Default__Path=cert-aspnetcore.pfx
      - Kestrel__Certificates__Default__Password=ufo
      - AdminConfiguration:IdentityAdminBaseUrl=${STS_ADMIN_SERVER}:${STS_ADMIN_PORT}
    networks:
      - ft-network
    volumes:
      - ./IdentityServer4.Admin/src/db:/db

networks:
  ft-network:
    driver: bridge
volumes:
  ft-data-redis:
  ft-data-mongo:
  ft-data-mongo-app:
